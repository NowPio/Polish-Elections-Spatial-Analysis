---
title: "A spatial analysis of the Polish elections in 2019"
author: Piotr Nowicki
date: today
format: 
  gfm:
    code-folded: true      
editor: visual
execute: 
  cache: true
  warning: false
  message: false
---

## Introduction

```{r}
#| label: loading-data
#| results: hide
libraries <- c("spdep", "sfdep", "rgdal", "maptools", "sp", "sf",
               "ggplot2", "tidyverse", "gridExtra", "spatialreg",
               "vtable", "cartography", "readxl", "texreg")
lapply(libraries, require, character.only = T)

wd <- getwd()
setwd(paste0(wd, "/dane"))

POW <- st_read("powiaty.shp")
POW <- st_transform(POW, 4326)
results <- read.csv("wyniki_powiaty.csv", sep = ";")
results$Kod.TERYT <- as.integer(results$Kod.TERYT/100)
results <- results[results$Powiat != c("zagranica", "statki"), 
                   c(1, 2, 3, 4, 10, 12, 13, 15, 17)]
colnames(results)[5:9] <- c("KO", "Konfederacja", "PSL", "PiS", "Lewica")

for (i in 4:9) {
  results[i] <- as.numeric(stringr::str_replace(results[, i], ',', '.'))
}

POW$jpt_kod_je <- as.integer(POW$jpt_kod_je)
POW <- arrange(POW, jpt_kod_je)
POW$PiS <- results$PiS
POW$KO <- results$KO
POW$PSL <- results$PSL
POW$Lewica <- results$Lewica
POW$Konfederacja <- results$Konfederacja

cont.sf <- poly2nb(POW)
cont.listw <- nb2listw(cont.sf, style = "W")
st.cont <- st_contiguity(POW)
st.weights <- st_weights(st.cont)

results15 <- read_excel("wyniki2015.xls")
results15$TERYT <- as.integer(results15$TERYT)
results15 <- results15[!results15$Powiat %in% 
                         c("Zagranica", "Statki (Gdynia)", "Statki (GdaÅ„sk)"), 
                       c(2, 3, 10:17)]
colnames(results15)[3:10] <- c("PiS", "PO", "Razem", "KORWiN", 
                               "PSL", "ZL", "Kukiz", "N")
results15$KO <- results15$PO + results15$N
results15$Lewica <- results15$ZL + results15$Razem
results15$PSL <- results15$PSL + results15$Kukiz
colnames(results15)[6] <- "Konfederacja" 

POW15 <- st_read("powiaty.shp")
POW15 <- st_transform(POW15, 4326)
POW15$jpt_kod_je <- as.integer(POW15$jpt_kod_je)
POW15 <- arrange(POW15, jpt_kod_je)
POW15 <- merge(POW15, results15, by.x = "jpt_kod_je", by.y = "TERYT", all.x = T)

data <- read_xlsx("zmienne.xlsx")
```

```{r}
#| label: summary statistics for vote shares

summary(results[c("PiS", "KO", "Lewica", "PSL", "Konfederacja")])

summary(results15[c("PiS", "KO", "Lewica", "PSL", "Konfederacja")])
```

```{r}
#| label: vote shares for every political party

par(mfrow=c(2,2))
choroLayer(POW, var = "PiS",
              col = carto.pal(pal1 = "blue.pal", n1 = 10))
choroLayer(POW, var = "KO",
              col = carto.pal(pal1 = "sand.pal", n1 = 10))
choroLayer(POW, var = "Lewica",
              col = carto.pal(pal1 = "red.pal", n1 = 10))
choroLayer(POW, var = "PSL",
              col = carto.pal(pal1 = "green.pal", n1 = 10))
par(mfrow=c(1,1))
choroLayer(POW, var = "Konfederacja",
              col = carto.pal(pal1 = "grey.pal", n1 = 10))
```

```{r}
#| label: global Moran tests 2019
moran.test(POW$PiS, cont.listw, alternative = "two.sided")
moran.test(POW$KO, cont.listw, alternative = "two.sided")
moran.test(POW$Lewica, cont.listw, alternative = "two.sided")
moran.test(POW$PSL, cont.listw, alternative = "two.sided")
moran.test(POW$Konfederacja, cont.listw, alternative = "two.sided")
```

```{r}
#| label: global Moran tests 2015
moran.test(results15$PiS, cont.listw, alternative = "two.sided")
moran.test(results15$KO, cont.listw, alternative = "two.sided")
moran.test(results15$Lewica, cont.listw, alternative = "two.sided")
moran.test(results15$PSL, cont.listw, alternative = "two.sided")
moran.test(results15$Konfederacja, cont.listw, alternative = "two.sided")
```

```{r}
#| label: local Moran plots
locM_PiS <- as.data.frame(localmoran(spNamedVec("PiS", results), 
                                     cont.listw))
locM_KO <- as.data.frame(localmoran(spNamedVec("KO", results), 
                                    cont.listw))
locM_Lewica <- as.data.frame(localmoran(spNamedVec("Lewica", results), 
                                        cont.listw))
locM_PSL <- as.data.frame(localmoran(spNamedVec("PSL", results), 
                                     cont.listw))
locM_Konf <- as.data.frame(localmoran(spNamedVec("Konfederacja", results), 
                                      cont.listw))

locM_PiS15 <- as.data.frame(localmoran(results15$PiS, cont.listw))
locM_KO15 <- as.data.frame(localmoran(results15$KO, cont.listw))
locM_Lewica15 <- as.data.frame(localmoran(results15$Lewica, cont.listw))
locM_PSL15 <- as.data.frame(localmoran(results15$PSL, cont.listw))
locM_Konf15 <- as.data.frame(localmoran(results15$Konfederacja, cont.listw))

brks_PiS <- c(min(locM_PiS[,5]), 0.05000, 0.95000, max(locM_PiS[,5]))
brks_PiS15 <- c(min(locM_PiS15[,5]), 0.05000, 0.95000, max(locM_PiS15[,5]))
cols_PiS <- c("darkblue", "grey90", "lightblue")
brks_KO <- c(min(locM_KO[,5]), 0.05000, 0.95000, max(locM_KO[,5]))
brks_KO15 <- c(min(locM_KO15[,5]), 0.05000, 0.95000, max(locM_KO15[,5]))
cols_KO <- c("orange4", "grey90", "orange")
brks_Lewica <- c(min(locM_Lewica[,5]), 0.05000, 0.95000, max(locM_Lewica[,5]))
brks_Lewica15 <- c(min(locM_Lewica15[,5]), 0.05000, 0.95000, max(locM_Lewica15[,5]))
cols_Lewica <- c("darkred", "grey90", "red")
brks_PSL <- c(min(locM_PSL[,5]), 0.05000, 0.95000, max(locM_PSL[,5]))
brks_PSL15 <- c(min(locM_PSL15[,5]), 0.05000, 0.95000, max(locM_PSL15[,5]))
cols_PSL <- c("darkgreen", "grey90", "lightgreen")
brks_Konf <- c(min(locM_Konf[,5]), 0.05000, 0.95000, max(locM_Konf[,5]))
brks_Konf15 <- c(min(locM_Konf15[,5]), 0.05000, 0.95000, max(locM_Konf15[,5]))
cols_Konf <- c("grey30", "grey90", "grey60")

ggplot(POW)+
  geom_sf(aes(fill=factor(cut(locM_PiS[,5], 
                              breaks=brks_PiS, 
                              include.lowest = T))),
          show.legend = F) +
  scale_fill_manual(values = cols_PiS) +
  ggtitle("PiS 2019") +
  theme(plot.title = element_text(hjust = 0.5),
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks = element_blank()) -> plotM_PiS
ggplot(POW)+
  geom_sf(aes(fill=factor(cut(locM_KO[,5], 
                              breaks=brks_KO, 
                              include.lowest = T))),
          show.legend = F) +
  scale_fill_manual(values = cols_KO) +
  ggtitle("KO 2019") +
  theme(plot.title = element_text(hjust = 0.5),
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks = element_blank()) -> plotM_KO
ggplot(POW)+
  geom_sf(aes(fill=factor(cut(locM_Lewica[,5], 
                              breaks=brks_Lewica, 
                              include.lowest = T))),
          show.legend = F) +
  scale_fill_manual(values = cols_Lewica) +
  ggtitle("Lewica 2019") +
  theme(plot.title = element_text(hjust = 0.5),
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks = element_blank()) -> plotM_Lewica
ggplot(POW)+
  geom_sf(aes(fill=factor(cut(locM_PSL[,5], 
                              breaks=brks_PSL, 
                              include.lowest = T))),
          show.legend = F) +
  scale_fill_manual(values = cols_PSL) +
  ggtitle("PSL 2019") +
  theme(plot.title = element_text(hjust = 0.5),
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks = element_blank()) -> plotM_PSL
ggplot(POW)+
  geom_sf(aes(fill=factor(cut(locM_Konf[,5], 
                              breaks=brks_Konf, 
                              include.lowest = T))),
          show.legend = F) +
  scale_fill_manual(values = cols_Konf) +
  ggtitle("Konfederacja 2019") +
  theme(plot.title = element_text(hjust = 0.5),
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks = element_blank()) -> plotM_Konf

ggplot(POW)+
  geom_sf(aes(fill=factor(cut(locM_PiS15[,5], 
                              breaks=brks_PiS15, 
                              include.lowest = T))),
          show.legend = F) +
  scale_fill_manual(values = cols_PiS) +
  ggtitle("PiS 2015") +
  theme(plot.title = element_text(hjust = 0.5),
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks = element_blank()) -> plotM_PiS15
ggplot(POW)+
  geom_sf(aes(fill=factor(cut(locM_KO15[,5], 
                              breaks=brks_KO15, 
                              include.lowest = T))),
          show.legend = F) +
  scale_fill_manual(values = cols_KO) +
  ggtitle("KO 2015") +
  theme(plot.title = element_text(hjust = 0.5),
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks = element_blank()) -> plotM_KO15
ggplot(POW)+
  geom_sf(aes(fill=factor(cut(locM_Lewica15[,5], 
                              breaks=brks_Lewica15, 
                              include.lowest = T))),
          show.legend = F) +
  scale_fill_manual(values = cols_Lewica) +
  ggtitle("Lewica 2015") +
  theme(plot.title = element_text(hjust = 0.5),
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks = element_blank()) -> plotM_Lewica15
ggplot(POW)+
  geom_sf(aes(fill=factor(cut(locM_PSL15[,5], 
                              breaks=brks_PSL15, 
                              include.lowest = T))),
          show.legend = F) +
  scale_fill_manual(values = cols_PSL) +
  ggtitle("PSL 2015") +
  theme(plot.title = element_text(hjust = 0.5),
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks = element_blank()) -> plotM_PSL15
ggplot(POW)+
  geom_sf(aes(fill=factor(cut(locM_Konf15[,5], 
                              breaks=brks_Konf15, 
                              include.lowest = T))),
          show.legend = F) +
  scale_fill_manual(values = cols_Konf) +
  ggtitle("Konfederacja 2015") +
  theme(plot.title = element_text(hjust = 0.5),
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks = element_blank()) -> plotM_Konf15

grid.arrange(plotM_PiS, plotM_PiS15,
             plotM_KO, plotM_KO15,
             plotM_Lewica, plotM_Lewica15, 
             ncol = 2)
grid.arrange(plotM_PSL, plotM_PSL15,
             plotM_Konf, plotM_Konf15,
             ncol = 2)
```

```{r}
#| label: local Gertis-Ord plots

# local Gertis-Ord 2019
locG_PiS <- POW %>% 
  mutate(
    Gi = local_g_perm(PiS, st.cont, 
                      st.weights, 
                      nsim = 999)
  ) %>% 
  unnest(Gi) %>% 
  select(gi, p_folded_sim) %>% 
  mutate(Spots = case_when(
    gi > 0 & p_folded_sim <= 0.05 ~ "Hot",
    gi < 0 & p_folded_sim <= 0.05 ~ "Cold",
    TRUE ~ "Insignificant"
  ),
  Spots = factor(
    Spots,
    levels = c("Hot", "Insignificant", "Cold")
  ))
  
locG_KO <- POW %>% 
  mutate(
    Gi = local_g_perm(KO, st.cont, 
                      st.weights, 
                      nsim = 999)
  ) %>% 
  unnest(Gi) %>% 
  select(gi, p_folded_sim) %>% 
  mutate(Spots = case_when(
    gi > 0 & p_folded_sim <= 0.05 ~ "Hot",
    gi < 0 & p_folded_sim <= 0.05 ~ "Cold",
    TRUE ~ "Insignificant"
  ),
  Spots = factor(
    Spots,
    levels = c("Hot", "Insignificant", "Cold")
  ))

locG_Lewica <- POW %>% 
  mutate(
    Gi = local_g_perm(Lewica, st.cont, 
                      st.weights, 
                      nsim = 999)
  ) %>% 
  unnest(Gi) %>% 
  select(gi, p_folded_sim) %>% 
  mutate(Spots = case_when(
    gi > 0 & p_folded_sim <= 0.05 ~ "Hot",
    gi < 0 & p_folded_sim <= 0.05 ~ "Cold",
    TRUE ~ "Insignificant"
  ),
  Spots = factor(
    Spots,
    levels = c("Hot", "Insignificant", "Cold")
  ))

locG_PSL <- POW %>% 
  mutate(
    Gi = local_g_perm(PSL, st.cont, 
                      st.weights, 
                      nsim = 999)
  ) %>% 
  unnest(Gi) %>% 
  select(gi, p_folded_sim) %>% 
  mutate(Spots = case_when(
    gi > 0 & p_folded_sim <= 0.05 ~ "Hot",
    gi < 0 & p_folded_sim <= 0.05 ~ "Cold",
    TRUE ~ "Insignificant"
  ),
  Spots = factor(
    Spots,
    levels = c("Hot", "Insignificant", "Cold")
  ))

locG_Konfederacja <- POW %>% 
  mutate(
    Gi = local_g_perm(Konfederacja, st.cont, 
                      st.weights,
                      nsim = 999)
  ) %>% 
  unnest(Gi) %>% 
  select(gi, p_folded_sim) %>% 
  mutate(Spots = case_when(
    gi > 0 & p_folded_sim <= 0.05 ~ "Hot",
    gi < 0 & p_folded_sim <= 0.05 ~ "Cold",
    TRUE ~ "Insignificant"
  ),
  Spots = factor(
    Spots,
    levels = c("Hot", "Insignificant", "Cold")
  ))

locG_PiS  %>%  
  ggplot(aes(fill = Spots)) +
  geom_sf(color = "black", lwd = 0.1) +
  scale_fill_brewer(type = "div", palette = 5) +
  labs(title = "PiS 2019") +
  theme(plot.title = element_text(hjust = 0.5),
        legend.position = "none",
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks = element_blank()) -> plotG_PiS
locG_KO  %>%  
  ggplot(aes(fill = Spots)) +
  geom_sf(color = "black", lwd = 0.1) +
  scale_fill_brewer(type = "div", palette = 5) +
  labs(title = "KO 2019") +
  theme(plot.title = element_text(hjust = 0.5),
        legend.position = "none",
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks = element_blank()) -> plotG_KO
locG_Lewica  %>%  
  ggplot(aes(fill = Spots)) +
  geom_sf(color = "black", lwd = 0.1) +
  scale_fill_brewer(type = "div", palette = 5) +
  labs(title = "Lewica 2019") +
  theme(plot.title = element_text(hjust = 0.5),
        legend.position = "none",
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks = element_blank()) -> plotG_Lewica
locG_PSL  %>%  
  ggplot(aes(fill = Spots)) +
  geom_sf(color = "black", lwd = 0.1) +
  scale_fill_brewer(type = "div", palette = 5) +
  labs(title = "PSL 2019") +
  theme(plot.title = element_text(hjust = 0.5),
        legend.position = "none",
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks = element_blank()) -> plotG_PSL
locG_Konfederacja  %>%  
  ggplot(aes(fill = Spots)) +
  geom_sf(color = "black", lwd = 0.1) +
  scale_fill_brewer(type = "div", palette = 5) +
  labs(title = "Konfederacja 2019") +
  theme(plot.title = element_text(hjust = 0.5),
        legend.position = "none",
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks = element_blank()) -> plotG_Konfederacja

# local Gertis-Ord 2015

locG_PiS15 <- POW15 %>% 
  mutate(
    Gi = local_g_perm(PiS, st.cont, 
                      st.weights,
                      nsim = 999)
  ) %>% 
  unnest(Gi) %>% 
  select(gi, p_folded_sim) %>% 
  mutate(Spots = case_when(
    gi > 0 & p_folded_sim <= 0.05 ~ "Hot",
    gi < 0 & p_folded_sim <= 0.05 ~ "Cold",
    TRUE ~ "Insignificant"
  ),
  Spots = factor(
    Spots,
    levels = c("Hot", "Insignificant", "Cold")
  ))

locG_KO15 <- POW15 %>% 
  mutate(
    Gi = local_g_perm(KO, st.cont, 
                      st.weights, 
                      nsim = 999)
  ) %>% 
  unnest(Gi) %>% 
  select(gi, p_folded_sim) %>% 
  mutate(Spots = case_when(
    gi > 0 & p_folded_sim <= 0.05 ~ "Hot",
    gi < 0 & p_folded_sim <= 0.05 ~ "Cold",
    TRUE ~ "Insignificant"
  ),
  Spots = factor(
    Spots,
    levels = c("Hot", "Insignificant", "Cold")
  ))

locG_Lewica15 <- POW15 %>% 
  mutate(
    Gi = local_g_perm(Lewica, st.cont, 
                      st.weights, 
                      nsim = 999)
  ) %>% 
  unnest(Gi) %>% 
  select(gi, p_folded_sim) %>% 
  mutate(Spots = case_when(
    gi > 0 & p_folded_sim <= 0.05 ~ "Hot",
    gi < 0 & p_folded_sim <= 0.05 ~ "Cold",
    TRUE ~ "Insignificant"
  ),
  Spots = factor(
    Spots,
    levels = c("Hot", "Insignificant", "Cold")
  ))

locG_PSL15 <- POW15 %>% 
  mutate(
    Gi = local_g_perm(PSL, st.cont, 
                      st.weights, 
                      nsim = 999)
  ) %>% 
  unnest(Gi) %>% 
  select(gi, p_folded_sim) %>% 
  mutate(Spots = case_when(
    gi > 0 & p_folded_sim <= 0.05 ~ "Hot",
    gi < 0 & p_folded_sim <= 0.05 ~ "Cold",
    TRUE ~ "Insignificant"
  ),
  Spots = factor(
    Spots,
    levels = c("Hot", "Insignificant", "Cold")
  ))

locG_Konfederacja15 <- POW15 %>% 
  mutate(
    Gi = local_g_perm(Konfederacja, st.cont, 
                      st.weights, 
                      nsim = 999)
  ) %>% 
  unnest(Gi) %>% 
  select(gi, p_folded_sim) %>% 
  mutate(Spots = case_when(
    gi > 0 & p_folded_sim <= 0.05 ~ "Hot",
    gi < 0 & p_folded_sim <= 0.05 ~ "Cold",
    TRUE ~ "Insignificant"
  ),
  Spots = factor(
    Spots,
    levels = c("Hot", "Insignificant", "Cold")
  ))

locG_PiS15  %>%  
  ggplot(aes(fill = Spots)) +
  geom_sf(color = "black", lwd = 0.1) +
  scale_fill_brewer(type = "div", palette = 5) +
  labs(title = "PiS 2015") +
  theme(plot.title = element_text(hjust = 0.5),
        legend.position = "none",
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks = element_blank()) -> plotG_PiS15
locG_KO15  %>%  
  ggplot(aes(fill = Spots)) +
  geom_sf(color = "black", lwd = 0.1) +
  scale_fill_brewer(type = "div", palette = 5) +
  labs(title = "KO 2015") +
  theme(plot.title = element_text(hjust = 0.5),
        legend.position = "none",
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks = element_blank()) -> plotG_KO15
locG_Lewica15  %>%  
  ggplot(aes(fill = Spots)) +
  geom_sf(color = "black", lwd = 0.1) +
  scale_fill_brewer(type = "div", palette = 5) +
  labs(title = "Lewica 2015") +
  theme(plot.title = element_text(hjust = 0.5),
        legend.position = "none",
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks = element_blank()) -> plotG_Lewica15
locG_PSL15  %>%  
  ggplot(aes(fill = Spots)) +
  geom_sf(color = "black", lwd = 0.1) +
  scale_fill_brewer(type = "div", palette = 5) +
  labs(title = "PSL 2015") +
  theme(plot.title = element_text(hjust = 0.5),
        legend.position = "none",
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks = element_blank()) -> plotG_PSL15
locG_Konfederacja15  %>%  
  ggplot(aes(fill = Spots)) +
  geom_sf(color = "black", lwd = 0.1) +
  scale_fill_brewer(type = "div", palette = 5) +
  labs(title = "Konfederacja 2015") +
  theme(plot.title = element_text(hjust = 0.5),
        legend.position = "none",
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks = element_blank()) -> plotG_Konfederacja15

grid.arrange(plotG_PiS, plotG_PiS15,
             plotG_KO, plotG_KO15,
             plotG_Lewica, plotG_Lewica15,
             ncol = 2)
grid.arrange(plotG_PSL, plotG_PSL15, 
             plotG_Konfederacja, plotG_Konfederacja15,
             ncol = 2)
```

```{r}
#| label: spatial econometrics
data$ubostwo_pc1000 <- data$ubostwo/data$ludnosc*1000
data$ubostwo_pc1000 <- data$ubostwo_pc1000/mean(data$ubostwo_pc1000)*100
data$firmy_per_tys10 <- data$firmy_per_tys10/mean(data$firmy_per_tys10)*100
data$inwestycje_per_capita <- data$inwestycje_per_capita/mean(data$inwestycje_per_capita)*100
data$PiS <- results$PiS
data$KO <- results$KO
data$Lewica <- results$Lewica
data$PSL <- results$PSL
data$Konfederacja <- results$Konfederacja
data$PiS15 <- results15$PiS
data$KO15 <- results15$KO
data$Lewica15 <- results15$Lewica
data$PSL15 <- results15$PSL
data$Konfederacja15 <- results15$Konfederacja
data$lag.Konfederacja15 <- lag.listw(cont.listw, results15$Konfederacja)
data$lag.Lewica15 <- lag.listw(cont.listw, results15$Lewica)
data$lag.PiS15 <- lag.listw(cont.listw, results15$PiS)
data$lag.KO15 <- lag.listw(cont.listw, results15$KO)
data$lag.PSL15 <- lag.listw(cont.listw, results15$PSL)

form_PiS <- PiS ~ PiS15 + wynagrodzenie + feminizacja + firmy_per_tys10 + demografia +
  log(ludnosc_per_km) + bezrobocie + ubostwo_pc1000 + inwestycje_per_capita

form_KO <- KO ~ KO15 + wynagrodzenie + feminizacja + firmy_per_tys10 + demografia +
  log(ludnosc_per_km) + bezrobocie + ubostwo_pc1000 + inwestycje_per_capita

form_Lewica <- Lewica ~ Lewica15 + wynagrodzenie + feminizacja + firmy_per_tys10 + demografia +
  log(ludnosc_per_km) + bezrobocie + ubostwo_pc1000 + inwestycje_per_capita + lag.Lewica15

form_PSL <- PSL ~ PSL15 + wynagrodzenie + feminizacja + firmy_per_tys10 + demografia +
  log(ludnosc_per_km) + bezrobocie + ubostwo_pc1000 + inwestycje_per_capita

form_Konfederacja <- Konfederacja ~ Konfederacja15 + wynagrodzenie + feminizacja + firmy_per_tys10 + demografia +
  log(ludnosc_per_km) + bezrobocie + ubostwo_pc1000 + inwestycje_per_capita + lag.Konfederacja15

estimate_models <- function (form) {
  model.lm <<- lm(form, data = data)
  GNS <<- sacsarlm(form, data = data, listw = cont.listw, type = "sacmixed", 
                   method = "LU")
  SAC <<- sacsarlm(form, data = data, listw = cont.listw)
  SDEM <<- errorsarlm(form, data = data, listw = cont.listw, etype = "emixed")
  SEM <<- errorsarlm(form, data = data, listw = cont.listw)
  SDM <<- lagsarlm(form, data = data, listw = cont.listw, type = "mixed")
  SAR <<- lagsarlm(form, data = data, listw = cont.listw)
  SLX <<- lmSLX(form, data = data, listw = cont.listw)
}
```

```{r}
#| label: model estimation
#| eval: false
# change the argument for another party
estimate_models(form_PiS)
lm.morantest(model.lm, cont.listw, alternative = "two.sided")
AIC(model.lm, GNS, SDM, SDEM, SLX, SAR, SAC, SEM)
summary(GNS)
summary(SDM)
summary(SDEM)
summary(SLX)
summary(SAR)
summary(SAC)
summary(SEM)
```

```{r}
#| label: estimate chsoen models
SDM_PiS <- lagsarlm(form_PiS, data = data, listw = cont.listw, type = "mixed")
SDM_KO <- lagsarlm(form_KO, data = data, listw = cont.listw, type = "mixed")
SAR_Lewica <- lagsarlm(form_Lewica, data = data, listw = cont.listw)
SDM_PSL <- lagsarlm(form_PSL, data = data, listw = cont.listw, type = "mixed")
SAR_Konfederacja <- lagsarlm(form_Konfederacja, data = data, listw = cont.listw)

moran.test(resid(SDM_PiS), cont.listw, alternative = "two.sided")
moran.test(resid(SDM_KO), cont.listw, alternative = "two.sided")
moran.test(resid(SAR_Lewica), cont.listw, alternative = "two.sided")
moran.test(resid(SDM_PSL), cont.listw, alternative = "two.sided")
moran.test(resid(SAR_Konfederacja), cont.listw, alternative = "two.sided")
```

```{r}
#| label: regression table
screenreg(list(SDM_PiS, SDM_KO, SAR_Lewica, SDM_PSL, SAR_Konfederacja),
          custom.coef.names = c(NA, 
                                "results",
                                "salary",
                                "feminisation",
                                "firms_per10k",
                                "demography",
                                "log(pop_per_km)",
                                "unemplyoment",
                                "poverty_per10k",
                                "investments_pc",
                                "lag.results15",
                                "lag.salary",
                                "lag.feminisation",
                                "lag.firms_per10k",
                                "lag.demography",
                                "lag.log(pop_per_km)",
                                "lag.unemployment",
                                "lag.poverty_per10k",
                                "lag.investments_pc",
                                NA,
                                rep(c("results15", "lag.results15"), times=4)))
```

```{r}
#| label: impacts
W.c <- as(as_dgRMatrix_listw(cont.listw), "CsparseMatrix") 
trMat <- trW(W.c, type = "mult") 
SDM_PiS_imp <- impacts(SDM_PiS, tr = trMat, R = 2000)$res %>% as.data.frame()
SDM_KO_imp <- impacts(SDM_KO, tr = trMat, R = 2000)$res %>% as.data.frame()
SAR_Lewica_imp <- impacts(SAR_Lewica, tr = trMat, R = 2000)$res %>% 
  as.data.frame(
                row.names = c("Lewica15",
                              "salary",
                              "feminisation",
                              "firms_per10k",
                              "demography",
                              "log(pop_per_km)",
                              "unemplyoment",
                              "poverty_per10k",
                              "investments_pc",
                              "lag.Lewica15"))
SDM_PSL_imp <- impacts(SDM_PSL, tr = trMat, R = 2000)$res %>% as.data.frame()
SAR_Konfederacja_imp <- impacts(SAR_Konfederacja, tr = trMat, R = 2000)$res %>% 
  as.data.frame(row.names = c("Konfederacja15",
                              "salary",
                              "feminisation",
                              "firms_per10k",
                              "demography",
                              "log(pop_per_km)",
                              "unemplyoment",
                              "poverty_per10k",
                              "investments_pc",
                              "lag.Konfederacja15"))

SDM_PiS_imp %>% kbl(format = "markdown",
                    digits = 3,
                    col.names = c("Direct",
                                  "Indirect",
                                  "Total"),
                    align = "c",
                    caption = "PiS")

SDM_KO_imp %>% kbl(format = "markdown",
                    digits = 3,
                    col.names = c("Direct",
                                  "Indirect",
                                  "Total"),
                    align = "c",
                    caption = "KO")

SAR_Lewica_imp %>% kbl(format = "markdown",
                    digits = 3,
                    col.names = c("Direct",
                                  "Indirect",
                                  "Total"),
                    align = "c",
                    caption = "Lewica")

SDM_PSL_imp %>% kbl(format = "markdown",
                    digits = 3,
                    col.names = c("Direct",
                                  "Indirect",
                                  "Total"),
                    align = "c",
                    caption = "PSL")

SAR_Konfederacja_imp %>% kbl(format = "markdown",
                    digits = 3,
                    col.names = c("Direct",
                                  "Indirect",
                                  "Total"),
                    align = "c",
                    caption = "Konfederacja")
```
